<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
	xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:p="http://primefaces.org/ui">
<ui:composition template="/resources/inspinia/template_basic.xhtml">
	<ui:param name="selectedMenu" value="userboard" />
	<ui:param name="b" value="#{editorView}" />
	<ui:define name="title">#{config.application} - #{message.header_dashboard} #{message.user}</ui:define>

	<ui:define name="content">

		<h:form id="FormTitle">
			<div class="row wrapper border-bottom white-bg page-heading">
				<div class="col-lg-10">
					<h1>
						<h:outputText value="Editeur d'un level" />
					</h1>
				</div>
			</div>
		</h:form>
		<h:form id="FormContent">
			<p:messages closable="true" />
			<div class="row">
				<div class="col-xs-6">
					<div class="form-group">
						<label> <h:outputText value="Nom : " /> <h:outputText styleClass="requiredField" value=" *" />
						</label>
						<h:inputText value="#{b.levelName}" styleClass="form-control" />
					</div>
				</div>
				<div class="col-xs-6">
					<div class="form-group">
						<label> <h:outputText value="Nombre de lignes : " /> <h:outputText styleClass="requiredField" value=" *" />
						</label>
						<h:inputText value="#{b.height}" styleClass="form-control" />
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-xs-6">
					<div class="form-group">
						<label> <h:outputText value="NumÃ©ro : " /> <h:outputText styleClass="requiredField" value=" *" />
						</label>
						<h:inputText value="#{b.levelNumber}" styleClass="form-control" />
					</div>
				</div>
				<div class="col-xs-6">
					<div class="form-group">
						<label> <h:outputText value="Nombre de colonnes : " /> <h:outputText styleClass="requiredField" value=" *" />
						</label>
						<h:inputText value="#{b.width}" styleClass="form-control" />
					</div>
				</div>
			</div>

			<div class="row">

				<p:outputPanel class="col-xs-12" id="sac">
					<p:outputPanel styleClass="case zindex10" id="lstart" layout="inline">
						<img src="#{facesContext.externalContext.requestContextPath}/resources/inspinia/images/start.png" />
					</p:outputPanel>
					<p:draggable for="lstart" revert="true" opacity="0.5" helper="clone" />
					<p:outputPanel styleClass="case m-l-sm zindex10" id="lend" layout="inline">
						<img src="#{facesContext.externalContext.requestContextPath}/resources/inspinia/images/end_point.png" />
					</p:outputPanel>
					<p:draggable for="lend" revert="true" opacity="0.5" helper="clone" />

					<p:outputPanel styleClass="case m-l-sm zindex10" id="mirror" layout="inline">
						<img src="#{facesContext.externalContext.requestContextPath}/resources/inspinia/images/mirroir.png" />
					</p:outputPanel>
					<p:draggable for="mirror" revert="true" opacity="0.5" helper="clone" />

					<p:outputPanel styleClass="case m-l-sm zindex10" id="wall" layout="inline">
						<img src="#{facesContext.externalContext.requestContextPath}/resources/inspinia/images/mur.png" />
					</p:outputPanel>
					<p:draggable for="wall" revert="true" opacity="0.5" helper="clone" />

					<p:outputPanel styleClass="case m-l-sm zindex10" id="checkpoint" layout="inline">
						<img src="#{facesContext.externalContext.requestContextPath}/resources/inspinia/images/checkpoint.png" />
					</p:outputPanel>
					<p:draggable for="checkpoint" revert="true" opacity="0.5" helper="clone" />


					<p:outputPanel styleClass="case m-l-xl" id="poubelle" layout="inline">
						<img src="#{facesContext.externalContext.requestContextPath}/resources/inspinia/images/trash.png" />
					</p:outputPanel>

					<p:droppable for="poubelle" tolerance="pointer">
						<p:ajax listener="#{b.releaseObject}" update="FormContent:ligne" />
					</p:droppable>
				</p:outputPanel>
			</div>
			<div class="row">
				<div class="col-xs-12 m-t-sm">
					<p:dataList value="#{b.list}" var="var" type="none" rowIndexVar="ligne" id="ligne" styleClass="pull-left">
						<div class="ligne">
							<p:dataList value="#{var}" var="cell" type="none" id="cases" rowIndexVar="colonne">
								<p:commandLink action="#{b.rotateCell(ligne,colonne)}" update="FormContent:ligne">
									<p:outputPanel styleClass="case rotate#{b.getOrientation(cell)} colonne_#{colonne} ligne_#{ligne}" id="drop" layout="inline">
										<ui:fragment rendered="#{b.getImage(cell) != null}">
											<img src="#{facesContext.externalContext.requestContextPath}/resources/inspinia/images/#{b.getImage(cell)}.png" />
										</ui:fragment>
									</p:outputPanel>
								</p:commandLink>

								<p:droppable for="drop" tolerance="pointer">
									<f:param name="ligne" value="#{ligne}" />
									<f:param name="colonne" value="#{colonne}" />
									<p:ajax listener="#{b.dropObject}" update="FormContent:ligne" />
								</p:droppable>
								<p:draggable for="drop" opacity="0.5" helper="clone" />

							</p:dataList>
						</div>
					</p:dataList>

					<div class="pioche pull-left m-l-md"></div>
				</div>
			</div>
			<div class="row">
				<div class="col-xs-6">
					<p:commandLink action="#{b.testLaser}" update="FormContent:ligne" styleClass="btn btn-primary m-r-xs">Tester</p:commandLink>
					<p:commandLink action="#{b.save}" update="@form" styleClass="btn btn-primary">Enregistrer</p:commandLink>
				</div>
			</div>
			
			<div class="ligne"></div>
			
		</h:form>
		<script>
			//<![CDATA[
			PrimeFaces.widget.Droppable.prototype.bindDropListener = function() {
				var _self = this;
				this.cfg.drop = function(event, ui) {
					if (_self.cfg.onDrop) {
						_self.cfg.onDrop.call(_self, event, ui);
					}
					if (_self.cfg.behaviors) {
						var dropBehavior = _self.cfg.behaviors['drop'];
						if (dropBehavior) {
							var ext = {
								params : [ {
									name : 'class',
									value : ui.draggable.attr('class')
								}, {
									name : 'dragId',
									value : ui.draggable.attr('id')
								} ]
							};
							console.log(ui.draggable);
							dropBehavior.call(_self, ext);
						}
					}
				};
			}
			// ]]>
		</script>
	</ui:define>
</ui:composition>
</html>
